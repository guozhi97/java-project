<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
       ">
	
	<!-- 引入MyBatis和数据源数据 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/jdbc.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- c3p0数据连接池 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${connection.driver_class}" />
		<property name="jdbcUrl" value="${connection.url}" />
		<property name="user" value="${connection.username}" />
		<property name="password" value="${connection.password}" />
        <property name="minPoolSize" value="${proxool.minimum.size}" />
        <property name="maxPoolSize" value="${proxool.maximum.size}" />
        <property name="initialPoolSize" value="${proxool.initial.size}" />
        <property name="maxIdleTime" value="${proxool.maxIdle.time}" />
        <property name="acquireIncrement" value="${proxool.acquire.increment}" />
        <property name="maxStatements" value="${proxool.max.statement}" />
        <property name="idleConnectionTestPeriod" value="${proxool.test.period}" />
        <property name="acquireRetryAttempts" value="${proxool.retry.attempts}" />
        <property name="breakAfterAcquireFailure" value="${proxool.acquire.failure}" />
        <property name="testConnectionOnCheckout" value="${proxool.validate}" />
	</bean>
	
	<!-- mybatis配置 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
         <!-- MyBatis 的 XML 配置文件路径 -->  
        <property name="configLocation" value="classpath:config/myBatis_config.xml" />  
        <!-- 扫描自动生成的xml文件 --><!-- Mybatis XML映射文件 -->  
          
        <property name="mapperLocations"  >  
            <list><!-- Mybatis XML映射文件 -->  
                <value>classpath:com/ctgu/lss/*/mapper/*.xml</value>
                <!-- 扫描自己写的xml文件-->   
                <!-- <value>classpath*:com/weshare/*/api/xml/*.xml</value>   -->
            </list>     
        </property> 
    </bean> 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ctgu.lss.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- SPRING公共读取bean -->
	<bean id="springBeanLocator" class="com.ctgu.util.spring.SpringBeanLocator" />
	<!-- 配置事务管理器 end -->

	<!-- 通过exclude-filter 把所有 @Controller注解的表现层控制器组件排除 ,多个包用都好隔开或从新定义一个 -->
	<!-- 不扫描带有@Controller注解的类。因为这些类已经随容器启动时，在sp_servlet.xml中扫描过一遍了 -->
	<context:component-scan base-package="com.ctgu.core.*">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="com.ctgu.lss.*">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

</beans>